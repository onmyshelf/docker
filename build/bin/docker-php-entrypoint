#!/bin/bash
set -e

#
#  Config
#

# environment variables that can overwrite config.php file
env_vars=(EMAIL_FROM SMTP_SERVER SMTP_PORT SMTP_USER SMTP_PASSWORD \
          OMS_URL LOGFILE LOGGER_LEVEL DEV_MODE READ_ONLY)

# main folders
www=/var/www/html/api/v1
log=/var/log/onmyshelf/onmyshelf.log

#
#  Functions
#

# Edit config.php
# Usage: edit_config VARIABLE VALUE
edit_config() {
	value="'$2'"
	case $2 in
		true|false)
			value=$2
			;;
	esac

	sed -i "s|'$1'.*|'$1', $value)\;|" $www/config.php
}

#
#  Main program
#

echo "Starting OnMyShelf API server..."

# init config file if not exists
if ! [ -f $www/config.php ] ; then
	echo "Initialize configuration file..."
	cp $www/config.default.php $www/config.php
	chown www-data $www/config.php && chmod 400 $www/config.php
	echo "Waiting for database to be ready..."
	sleep 10
fi

# set default config values
edit_config EMAIL_FROM onmyshelf@example.com
edit_config SMTP_SERVER
edit_config SMTP_PORT 465
edit_config SMTP_USER
edit_config SMTP_PASSWORD
edit_config OMS_URL
edit_config LOGFILE $log
edit_config LOGGER_LEVEL INFO
edit_config DEV_MODE false
edit_config READ_ONLY false

# overwrite config file from environment variables
for var in "${env_vars[@]}" ; do
	[ -n "${!var}" ] && edit_config "$var" "${!var}"
done

# prepare log file
mkdir -p $(dirname $log)
if ! [ -f $log ] ; then
	touch $log
	chmod 600 $log
fi

chown www-data $log

# create folders for modules
for m in database import storage ; do
	mkdir -p $www/inc/modules/$m && chown www-data $www/inc/modules/$m
done

# install/upgrade instance
(cd $www && php bin/oms install && php bin/oms upgrade)

# give access rights to the media library
chown www-data /var/www/html/media && chmod u+rwx /var/www/html/media

echo "Starting Apache server..."

#
#  Original entrypoint from official php image
#

# first arg is `-f` or `--some-option`
if [ "${1#-}" != "$1" ]; then
	set -- apache2-foreground "$@"
fi

exec "$@"
